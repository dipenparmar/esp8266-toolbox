#!/usr/bin/env python

import paho.mqtt.client as mqtt
# pydoc .../paho/mqtt/client.py

if __name__ == '__main__':
    def on_connect(client, userdata, flags, rc):
        print '   connect: %s, flags = %s' % (mqtt.connack_string(rc), flags)

        # Subscribing in on_connect() will renew subscriptions for reconnections
        client.subscribe('test')

    def on_disconnect(client, userdata, rc):
        if rc == mqtt.MQTT_ERR_SUCCESS:
            print 'disconnect: client.disconnect()'
        else:
            print 'disconnect: %s' % mqtt.error_string(rc)

    def on_log(client, userdata, level, buf):
        LEVEL = {   mqtt.MQTT_LOG_INFO:'info',
                  mqtt.MQTT_LOG_NOTICE:'notice',
                 mqtt.MQTT_LOG_WARNING:'warning',
                     mqtt.MQTT_LOG_ERR:'error',
                   mqtt.MQTT_LOG_DEBUG:'debug' }
        
        print '       log: %s: %s' % (LEVEL[level], buf)

    def on_message(client, userdata, message):
        print '   message: %s: %s' % (message.topic, message.payload)

    def on_subscribe(client, userdata, mid, granted_qos):
        print ' subscribe: mid = %s, granted_qos = %s' % (mid, granted_qos)

    client = mqtt.Client()
    client.on_connect    = on_connect
    client.on_disconnect = on_disconnect
    client.on_log        = on_log
    client.on_message    = on_message
    client.on_subscribe  = on_subscribe

    client.connect('127.0.0.1')
    client.loop_forever()
